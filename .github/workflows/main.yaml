name: Main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize ]

permissions:
  contents: read

jobs:

  lint:
    name: 'Lint'
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
      - name: Lint
        run: make lint

  compile:
    name: 'Compile'
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
      - name: Compile
        run: make COMPILE_SCOPE=libs compile
      - name: Upload compiled libs
        uses: ./.github/actions/upload-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
          artifact-path: 'package.json "integration/*/lib/*" "packages/*/lib/*" "packages/*/esm/*" "packages/serenity-bdd/cache/*"'

  #
  # Test
  #

  test-linux-node-lts-active:
    name: 'Test: Linux, LTS'
    needs:
      - lint
      - compile
    runs-on: ubuntu-24.04
    permissions:
      checks: write
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
      - name: Download compiled libs
        uses: ./.github/actions/download-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
      - name: Test
        run: make test
      - name: Qlty
        uses: qltysh/qlty-action/coverage@b9133a486505563742d768da29f7951271678c87 # v1.1.1
        with:
          oidc: true
          command: publish
          files: packages/*/target/coverage/lcov.info
          incomplete: true

  test-linux-node-lts-maintenance:
    name: 'Test: Linux, LTS-1'
    needs:
      - lint
      - compile
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
        with:
          node-version: 20.x
      - name: Download compiled libs
        uses: ./.github/actions/download-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
      - name: Test
        run: make test-no-coverage

  test-linux-node-lts-maintenance-previous:
    name: 'Test: Linux, LTS-2'
    needs:
      - lint
      - compile
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
        with:
          node-version: 18.x
      - name: Download compiled libs
        uses: ./.github/actions/download-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
      - name: Test
        run: make test-no-coverage

  test-windows-node-lts-active:
    name: 'Test: Windows, LTS'
    needs:
      - lint
      - compile
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
      - name: Download compiled libs
        uses: ./.github/actions/download-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
      - name: Test
        run: make test-no-coverage

  #
  # Integration
  #

  test-integration-playwright:
    name: 'Integration: Playwright'
    needs:
      - lint
      - compile
    runs-on: ubuntu-24.04
    permissions:
      checks: write
      contents: read
      id-token: write
    strategy:
      matrix:
        module:
          - playwright-test
          - playwright-test-ct
          - playwright-web
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
      - name: Set up Java
        uses: ./.github/actions/setup-java
      - name: Download compiled libs
        uses: ./.github/actions/download-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
      - name: Test
        run: |
          mkdir target && \
          pnpm dlx playwright install --with-deps && \
          make INTEGRATION_SCOPE=${{ matrix.module }} integration-test
      - name: Upload test reports
        if: failure()
        uses: ./.github/actions/upload-compressed-artifact
        with:
          artifact-name: 'test-integration-reports-${{ matrix.module }}'
          artifact-path: 'package.json "integration/*/target/site/serenity"'
      - name: Qlty
        uses: qltysh/qlty-action/coverage@b9133a486505563742d768da29f7951271678c87 # v1.1.1
        with:
          oidc: true
          command: publish
          files: integration/*/target/coverage/lcov.info
          incomplete: true

  test-integration-protractor:
    name: 'Integration: Protractor'
    needs:
      - lint
      - compile
    runs-on: ubuntu-24.04
    permissions:
      checks: write
      contents: read
      id-token: write
    strategy:
      matrix:
        module:
          - protractor-test-runners
          - protractor-web
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
      - name: Set up Java
        uses: ./.github/actions/setup-java
      - name: Download compiled libs
        uses: ./.github/actions/download-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
      - name: Test
        run: |
          mkdir target && \
          make INTEGRATION_SCOPE=${{ matrix.module }} integration-test
      - name: Upload test reports
        if: failure()
        uses: ./.github/actions/upload-compressed-artifact
        with:
          artifact-name: 'test-integration-reports-${{ matrix.module }}'
          artifact-path: 'package.json "integration/*/target/site/serenity"'
      - name: Qlty
        uses: qltysh/qlty-action/coverage@b9133a486505563742d768da29f7951271678c87 # v1.1.1
        with:
          oidc: true
          command: publish
          files: integration/*/target/coverage/lcov.info
          incomplete: true

  test-integration-webdriverio:
    name: 'Integration: WebdriverIO'
    needs:
      - lint
      - compile
    runs-on: ubuntu-24.04
    permissions:
      checks: write
      contents: read
      id-token: write
    strategy:
      matrix:
        module:
          - webdriverio-8-test-runners
          - webdriverio-8-web-devtools
          - webdriverio-8-web-webdriver
          - webdriverio-test-runners
          - webdriverio-web
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
      - name: Set up Java
        uses: ./.github/actions/setup-java
      - name: Download compiled libs
        uses: ./.github/actions/download-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
      - name: Test
        run: |
          mkdir target && \
          make INTEGRATION_SCOPE=${{ matrix.module }} integration-test
      - name: Upload test reports
        if: failure()
        uses: ./.github/actions/upload-compressed-artifact
        with:
          artifact-name: 'test-integration-reports-${{ matrix.module }}'
          artifact-path: 'package.json "integration/*/target/site/serenity"'
      - name: Qlty
        uses: qltysh/qlty-action/coverage@b9133a486505563742d768da29f7951271678c87 # v1.1.1
        with:
          oidc: true
          command: publish
          files: integration/*/target/coverage/lcov.info
          incomplete: true

  test-integration:
    name: 'Integration'
    needs:
      - lint
      - compile
    runs-on: ubuntu-24.04
    permissions:
      checks: write
      contents: read
      id-token: write
    strategy:
      matrix:
        module:
          - cucumber-1
          - cucumber-2
          - cucumber-3
          - cucumber-4
          - cucumber-5
          - cucumber-6
          - cucumber-7
          - cucumber-8
          - cucumber-9
          - cucumber-10
          - cucumber-11
          - jasmine
          - mocha
          - rest
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
      - name: Download compiled libs
        uses: ./.github/actions/download-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
      - name: Test
        run: |
          mkdir target && \
          make INTEGRATION_SCOPE=${{ matrix.module }} integration-test
      - name: Qlty
        uses: qltysh/qlty-action/coverage@b9133a486505563742d768da29f7951271678c87 # v1.1.1
        with:
          oidc: true
          command: publish
          files: integration/*/target/coverage/lcov.info
          incomplete: true

  #
  # Reporting
  #

  coverage:
    name: 'Coverage'
    needs:
      - test-linux-node-lts-active
      - test-integration
      - test-integration-playwright
      - test-integration-protractor
      - test-integration-webdriverio
    runs-on: ubuntu-24.04
    permissions:
      checks: write
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      # TODO: use the official action when the issue is resolved https://github.com/qltysh/qlty-action/issues/119
#      - name: Qlty
#        uses: qltysh/qlty-action/coverage@v1.1.1
#        with:
#          oidc: true
#          command: complete

      # TODO: Qlty issue workaround

      # Based on https://github.com/qltysh/qlty-action/blob/325e718842513d9e19baf91280cab9bc6db6e17b/install/install_qlty.sh
      - name: Install Qlty CLI
        run: |
          curl -fsSL https://qlty.sh | bash
  
          qlty_bin_dir="$HOME/.qlty/bin"
          qlty_path="$qlty_bin_dir/qlty"
          
          echo "${qlty_bin_dir}" >>"${GITHUB_PATH}"
          
          (${qlty_path} version >/dev/null 2>&1) || echo "::warning::${qlty_path} does not exist!"

      - name: Qlty Complete
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        id: qlty
        with:
          script: |
            const OIDC_AUDIENCE = "https://qlty.sh";
            const idToken = await core.getIDToken(OIDC_AUDIENCE);
            core.setSecret(idToken);
            core.setOutput('id_token', idToken);
            
            const payload = context.payload;
            
            const completeArgs = [ "coverage", "complete" ];
            
            if (payload.pull_request) {
                completeArgs.push("--override-commit-sha", payload.pull_request["head"].sha);
                completeArgs.push("--override-branch", payload.pull_request["head"].ref);
            }

            core.setOutput('complete_args', completeArgs.join(' '));
      - name: Qlty Execute
        run: qlty ${{ steps.qlty.outputs.complete_args }}
        env:
          QLTY_CI_UPLOADER_TOOL: "qltysh/qlty-action"
          QLTY_CI_UPLOADER_VERSION: "1.1.1"
          QLTY_COVERAGE_TOKEN: ${{ steps.qlty.outputs.id_token }}

  #
  # NPM artifact publishing
  #

  artifacts-publish:
    name: 'NPM: publish artifacts'
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-24.04
    needs:
      - test-linux-node-lts-active
      - test-linux-node-lts-maintenance
      - test-linux-node-lts-maintenance-previous
      - test-windows-node-lts-active
      - test-integration
      - test-integration-playwright
      - test-integration-protractor
      - test-integration-webdriverio
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-lerna
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_user_email: ${{ secrets.RELEASE_GH_EMAIL }}
          git_username: ${{ secrets.RELEASE_GH_USERNAME }}
          npm_token: ${{ secrets.NPM_TOKEN }}

      - name: Download compiled libs
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: compiled-libs
      - name: Decompress Libs
        run: 7z x -aoa compiled-libs.zip

      - name: Set up Node
        uses: ./.github/actions/setup-node

      - name: Publish artifacts
        run: pnpm lerna:publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Print versions
        run: pnpm version:print >> $GITHUB_STEP_SUMMARY
