name: Main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize ]

permissions:
  contents: read

jobs:

  lint:
    name: 'Lint'
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
      - name: Lint
        run: make lint

  compile:
    name: 'Compile'
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
      - name: Compile
        run: make COMPILE_SCOPE=libs compile
      - name: Upload compiled libs
        uses: ./.github/actions/upload-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
          artifact-path: 'package.json "integration/*/lib/*" "packages/*/lib/*" "packages/*/esm/*" "packages/serenity-bdd/cache/*"'

  #
  # Test
  #

  test-linux-node-lts-active:
    name: 'Test: Linux, LTS'
    needs:
      - lint
      - compile
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
      - name: Download compiled libs
        uses: ./.github/actions/download-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
      - name: Test
        run: make test
      - name: Upload coverage reports
        uses: ./.github/actions/upload-compressed-artifact
        with:
          artifact-name: 'test-reports'
          artifact-path: 'package.json "packages/*/target/coverage/coverage-final.json"'

  test-linux-node-lts-maintenance:
    name: 'Test: Linux, LTS-1'
    needs:
      - lint
      - compile
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
        with:
          node-version: 20.x
      - name: Download compiled libs
        uses: ./.github/actions/download-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
      - name: Test
        run: make test-no-coverage

  test-linux-node-lts-maintenance-previous:
    name: 'Test: Linux, LTS-2'
    needs:
      - lint
      - compile
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
        with:
          node-version: 18.x
      - name: Download compiled libs
        uses: ./.github/actions/download-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
      - name: Test
        run: make test-no-coverage

  test-windows-node-lts-active:
    name: 'Test: Windows, LTS'
    needs:
      - lint
      - compile
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
      - name: Download compiled libs
        uses: ./.github/actions/download-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
      - name: Test
        run: make test-no-coverage

  #
  # Integration
  #

  test-integration-playwright:
    name: 'Integration: Playwright'
    needs:
      - lint
      - compile
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        module:
          - playwright-test
          - playwright-test-ct
          - playwright-web
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
      - name: Download compiled libs
        uses: ./.github/actions/download-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
      - name: Test
        run: |
          mkdir target && \
          npx --no playwright install --with-deps && \
          make INTEGRATION_SCOPE=${{ matrix.module }} integration-test
      - name: Upload test reports
        if: failure()
        uses: ./.github/actions/upload-compressed-artifact
        with:
          artifact-name: 'test-integration-reports-${{ matrix.module }}'
          artifact-path: 'package.json "integration/*/target/site/serenity"'
      - name: Upload coverage reports
        uses: ./.github/actions/upload-compressed-artifact
        with:
          artifact-name: 'test-integration-coverage-reports-${{ matrix.module }}'
          artifact-path: 'package.json "integration/*/target/coverage/**/*"'

  test-integration-protractor:
    name: 'Integration: Protractor'
    needs:
      - lint
      - compile
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        module:
          - protractor-test-runners
          - protractor-web
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
      - name: Download compiled libs
        uses: ./.github/actions/download-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
      - name: Test
        run: |
          mkdir target && \
          make INTEGRATION_SCOPE=${{ matrix.module }} integration-test
      - name: Upload test reports
        if: failure()
        uses: ./.github/actions/upload-compressed-artifact
        with:
          artifact-name: 'test-integration-reports-${{ matrix.module }}'
          artifact-path: 'package.json "integration/*/target/site/serenity"'
      - name: Upload coverage reports
        uses: ./.github/actions/upload-compressed-artifact
        with:
          artifact-name: 'test-integration-coverage-reports-${{ matrix.module }}'
          artifact-path: 'package.json "integration/*/target/coverage/**/*"'

  test-integration-webdriverio:
    name: 'Integration: WebdriverIO'
    needs:
      - lint
      - compile
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        module:
          - webdriverio-8-test-runners
          - webdriverio-8-web-devtools
          - webdriverio-8-web-webdriver
          - webdriverio-test-runners
          - webdriverio-web
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
      - name: Download compiled libs
        uses: ./.github/actions/download-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
      - name: Test
        run: |
          mkdir target && \
          make INTEGRATION_SCOPE=${{ matrix.module }} integration-test
      - name: Upload test reports
        if: failure()
        uses: ./.github/actions/upload-compressed-artifact
        with:
          artifact-name: 'test-integration-reports-${{ matrix.module }}'
          artifact-path: 'package.json "integration/*/target/site/serenity"'
      - name: Upload coverage reports
        uses: ./.github/actions/upload-compressed-artifact
        with:
          artifact-name: 'test-integration-coverage-reports-${{ matrix.module }}'
          artifact-path: 'package.json "integration/*/target/coverage/**/*"'

  test-integration:
    name: 'Integration'
    needs:
      - lint
      - compile
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        module:
          - cucumber-1
          - cucumber-2
          - cucumber-3
          - cucumber-4
          - cucumber-5
          - cucumber-6
          - cucumber-7
          - cucumber-8
          - cucumber-9
          - cucumber-10
          - cucumber-11
          - jasmine
          - mocha
          - rest
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: ./.github/actions/setup-node
      - name: Download compiled libs
        uses: ./.github/actions/download-compressed-artifact
        with:
          artifact-name: 'compiled-libs'
      - name: Test
        run: |
          mkdir target && \
          make INTEGRATION_SCOPE=${{ matrix.module }} integration-test
      - name: Upload coverage reports
        uses: ./.github/actions/upload-compressed-artifact
        with:
          artifact-name: 'test-integration-coverage-reports-${{ matrix.module }}'
          artifact-path: 'package.json "integration/*/target/coverage/**/*"'

  #
  # Reporting
  #

  coverage:
    name: 'Coverage'
    needs:
      - test-linux-node-lts-active
      - test-integration
      - test-integration-playwright
      - test-integration-protractor
      - test-integration-webdriverio
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 2

      - name: Set up Node
        uses: ./.github/actions/setup-node

      - name: Download all artifacts
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3

      - name: Decompress all artifacts to current directory
        run: ls **/*.zip | xargs -n1 7z x -aoa

      - name: Report coverage
        run: make report

      - name: Coveralls
        uses: coverallsapp/github-action@cfd0633edbd2411b532b808ba7a8b5e04f76d2c8 # v2.3.4
        with:
          github-token: ${{ github.token }}
          path-to-lcov: 'target/coverage/lcov.info'

      # https://github.com/actions/runner/issues/520
      - name: Get CodeClimate reporter ID
        id: secrets
        run: echo "CC_TEST_REPORTER_ID=${{ secrets.CC_TEST_REPORTER_ID }}" >> $GITHUB_OUTPUT

      - name: CodeClimate
        if: steps.secrets.outputs.CC_TEST_REPORTER_ID
        uses: paambaati/codeclimate-action@a1831d7162ea1fbc612ffe5fb3b90278b7999d59 # v5.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ steps.secrets.outputs.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: |
            ${{github.workspace}}/target/coverage/lcov.info:lcov
          debug: false

  #
  # NPM artifact publishing
  #

  artifacts-publish:
    name: 'NPM: publish artifacts'
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-22.04
    needs:
      - test-linux-node-lts-active
      - test-linux-node-lts-maintenance
      - test-linux-node-lts-maintenance-previous
      - test-windows-node-lts-active
      - test-integration
      - test-integration-playwright
      - test-integration-protractor
      - test-integration-webdriverio
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-lerna
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_user_email: ${{ secrets.RELEASE_GH_EMAIL }}
          git_username: ${{ secrets.RELEASE_GH_USERNAME }}
          npm_token: ${{ secrets.NPM_TOKEN }}

      - name: Download compiled libs
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
        with:
          name: compiled-libs
      - name: Decompress Libs
        run: 7z x -aoa compiled-libs.zip

      - name: Set up Node
        uses: ./.github/actions/setup-node

      - name: Publish artifacts
        run: pnpm lerna:publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Print versions
        run: pnpm version:print >> $GITHUB_STEP_SUMMARY
