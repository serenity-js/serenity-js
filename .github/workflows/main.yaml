name: Main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize ]

permissions:
  contents: read

jobs:

  detect-website-changes:
    name: 'Detect website changes'
    uses: 'serenity-js/serenity-js/.github/workflows/main-detect-changes.yaml@main'
    with:
      files: |
        documentation/**

  detect-source-code-changes:
    name: 'Detect source code and configuration changes'
    uses: 'serenity-js/serenity-js/.github/workflows/main-detect-changes.yaml@main'
    with:
      files: |
        .github/actions/**
        .github/workflows/main*.yaml
        bin/**
        packages/**
        integration/**
        *
      files-ignore: |
        .github/workflows/chore-*.yaml
        .github/workflows/pr-*.yaml
        .gitpod/**
        .gitpod.yml
        .husky/**
        .vscode/**
        documentation/**
        *.md
        .commitlintrc.js
        .cz-*.js
        package-lock.json

  lint:
    name: 'Lint'
    needs:
      - detect-website-changes
      - detect-source-code-changes
    if: |
      needs.detect-website-changes.outputs.has_changes == 'true' ||
      needs.detect-source-code-changes.outputs.has_changes == 'true'
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@main'
    with:
      node-version: 16.x
      npm-install-command: npm ci
      command: make lint

  compile:
    name: 'Compile'
    needs:
      - detect-source-code-changes
    if: needs.detect-source-code-changes.outputs.has_changes == 'true'
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@main'
    with:
      node-version: 16.x
      npm-install-command: make BOOTSTRAP_SCOPE=libs install
      command: make COMPILE_SCOPE=libs compile
      upload-artifact-name: 'compiled-libs'
      upload-artifact-path: 'package.json "integration/*/lib/*" "packages/*/lib/*"'

  #
  # Test
  #

  test-linux-node-lts-active:
    name: 'Test: Linux, LTS'
    needs:
      - lint
      - compile
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@main'
    with:
      node-version: 16.x
      npm-install-command: make BOOTSTRAP_SCOPE=@serenity-js install
      download-artifact-name: 'compiled-libs'
      command: make test
      upload-artifact-name: 'test-reports'
      upload-artifact-path: 'package.json "target/**/*"'

  test-linux-node-lts-previous:
    name: 'Test: Linux, LTS-1'
    needs:
      - lint
      - compile
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@main'
    with:
      node-version: 14.x
      npm-install-command: make BOOTSTRAP_SCOPE=@serenity-js install
      download-artifact-name: 'compiled-libs'
      command: make test

  test-linux-node-lts-next:
    name: 'Test: Linux, LTS+1'
    needs:
      - lint
      - compile
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@main'
    with:
      node-version: 18.x
      npm-install-command: make BOOTSTRAP_SCOPE=@serenity-js install
      download-artifact-name: 'compiled-libs'
      command: make test

  test-windows-node-lts-active:
    name: 'Test: Windows, LTS'
    needs:
      - lint
      - compile
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@main'
    with:
      runs-on: 'windows-latest'
      node-version: 16.x
      npm-install-command: make BOOTSTRAP_SCOPE=@serenity-js install
      download-artifact-name: 'compiled-libs'
      command: make test

# todo: add macOS too?
#  test-macos-node-lts-next:
#    name: 'Test: macOS, LTS'
#    needs:
#      - lint
#      - compile
#    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@main'
#    with:
#      runs-on: 'macos-latest'
#      node-version: 16.x
#      npm-install-command: make BOOTSTRAP_SCOPE=@serenity-js install
#      download-artifact-name: 'compiled-libs'
#      command: make test

  #
  # Integration
  #

  test-integration-saucelabs:
    name: 'Integration: SauceLabs'
    # don't run on forks which won't have access to secrets
    if: ${{ !github.event.pull_request.head.repo.fork }}
    concurrency:
      group: saucelabs-${{ github.ref }}
      cancel-in-progress: true
    needs:
      - lint
      - compile
    uses: 'serenity-js/serenity-js/.github/workflows/main-integration-test-step.yaml@main'
    with:
      modules: '["webdriverio-web"]'
      runs-on: 'ubuntu-latest'
      node-version: 16.x
      npm-install-command: make BOOTSTRAP_SCOPE=@integration install
      download-artifact-name: 'compiled-libs'
      command: 'make INTEGRATION_SCOPE=$INTEGRATION_MODULE integration-test'
      upload-artifact-name: 'test-integration-coverage-reports-saucelabs'
      upload-artifact-path: 'package.json "target/**/*"'
    secrets:
      sauce-username: ${{ secrets.SAUCE_USERNAME }}
      sauce-access-key: ${{ secrets.SAUCE_ACCESS_KEY }}

  test-integration:
    name: 'Integration'
    needs:
      - lint
      - compile
    uses: 'serenity-js/serenity-js/.github/workflows/main-integration-test-step.yaml@main'
    with:
      modules: |
        [
          "cucumber-1",
          "cucumber-2",
          "cucumber-3",
          "cucumber-4",
          "cucumber-5",
          "cucumber-6",
          "cucumber-7",
          "cucumber-8",
          "jasmine",
          "mocha",
          "playwright",
          "protractor",
          "webdriverio"
        ]
      runs-on: 'ubuntu-latest'
      node-version: 16.x
      npm-install-command: make BOOTSTRAP_SCOPE=@integration install
      download-artifact-name: 'compiled-libs'
      command: 'make INTEGRATION_SCOPE=$INTEGRATION_MODULE integration-test'
      upload-artifact-name: 'test-integration-coverage-reports'
      upload-artifact-path: 'package.json "target/**/*"'

  #
  # Reporting
  #

  coverage-aggregate:
    name: 'Coverage: aggregate'
    needs:
      - test-linux-node-lts-active
      - test-integration-saucelabs
      - test-integration
    uses: 'serenity-js/serenity-js/.github/workflows/main-collect-artifacts.yaml@main'
    with:
      upload-artifact-name: 'aggregated-code-coverage'
      upload-artifact-path: 'package.json "target/coverage/*/coverage-final.json"'

  coverage-report:
    name: 'Coverage: report'
    needs:
      - coverage-aggregate
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@main'
    with:
      node-version: 16.x
      npm-install-command: npm ci
      download-artifact-name: 'aggregated-code-coverage'
      command: make report
      upload-artifact-name: 'aggregated-code-coverage-report'
      upload-artifact-path: 'package.json target'

  coverage-publish:
    name: 'Coverage: publish'
    runs-on: ubuntu-latest
    continue-on-error: true
#    if: github.ref == 'refs/heads/main'
    needs:
      - coverage-report
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Download code coverage reports
        uses: actions/download-artifact@v2
        with:
          name: 'aggregated-code-coverage-report'

      - name: Decompress code coverage reports
        run: '7z x -aoa aggregated-code-coverage-report.zip'

      - name: Coveralls
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ github.token }}
          path-to-lcov: 'target/coverage/lcov.info'

      - name: CodeClimate
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: |
            ${{github.workspace}}/target/coverage/lcov.info:lcov
          debug: false

  #
  # NPM artifact publishing
  #

  artifacts-publish:
    name: 'NPM: publish artifacts'
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs:
      - test-linux-node-lts-active
      - test-linux-node-lts-previous
      - test-windows-node-lts-active
      - test-integration-saucelabs
      - test-integration
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-lerna
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_user_email: ${{ secrets.RELEASE_GH_EMAIL }}
          git_username: ${{ secrets.RELEASE_GH_USERNAME }}
          npm_token: ${{ secrets.NPM_TOKEN }}

      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs
      - name: Decompress Libs
        run: 7z x -aoa compiled-libs.zip

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install Node Modules (root)
        uses: bahmutov/npm-install@v1
        with:
          install-command: npm ci
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      - name: Publish artifacts
        run: npm run lerna:publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Print versions
        run: npm run version:print >> $GITHUB_STEP_SUMMARY

  #
  # Website
  #

  # Website build uses always() as otherwise it won't be executed if artifacts-publish was skipped because there were no code changes
  #   https://github.com/actions/runner/issues/491#issuecomment-660122693
  website-build:
    name: 'Website: build'
    needs:
      - detect-website-changes
      - detect-source-code-changes
      - artifacts-publish
    if: |
      always() &&
      (
        (
          needs.detect-website-changes.result == 'success' &&
          needs.detect-website-changes.outputs.has_changes == 'true'
        ) ||
        (
          needs.detect-source-code-changes.result == 'success' &&
          needs.detect-source-code-changes.outputs.has_changes == 'true' &&
          needs.artifacts-publish.result == 'success'
        )
      )
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@main'
    with:
      node-version: 16.x
      npm-install-command: make BOOTSTRAP_SCOPE=site install
      command: make site
      upload-artifact-name: 'website'
      upload-artifact-path: 'documentation/serenity-js.org/build'

  website-publish:
    name: 'Website: publish'
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - website-build
    steps:
      - name: Download website artifact
        uses: actions/download-artifact@v2
        with:
          name: website
      - name: Decompress website
        run: 7z x -aoa website.zip

      - name: List all (debug)
        run: tree

#      - name: Publish website
#        uses: JamesIves/github-pages-deploy-action@v4.3.0
#        if: github.ref == 'refs/heads/main'
#        with:
#          BRANCH: gh-pages
#          FOLDER: documentation/serenity-js.org/build
#          CLEAN: true
