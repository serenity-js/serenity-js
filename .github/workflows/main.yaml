name: Main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize ]

permissions:
  contents: read

jobs:

  detect-website-changes:
    name: 'Detect website changes'
    uses: 'serenity-js/serenity-js/.github/workflows/main-detect-changes.yaml@main'
    with:
      files: |
        documentation/**

  detect-source-code-changes:
    name: 'Detect source code and configuration changes'
    uses: 'serenity-js/serenity-js/.github/workflows/main-detect-changes.yaml@main'
    with:
      files: |
        .github/actions/**
        .github/workflows/main*.yaml
        bin/**
        packages/**
        integration/**
        *
      files-ignore: |
        .github/workflows/chore-*.yaml
        .github/workflows/pr-*.yaml
        .gitpod/**
        .gitpod.yml
        .husky/**
        .vscode/**
        documentation/**
        *.md
        .commitlintrc.js
        .cz-*.js

  lint:
    name: 'Lint'
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@main'
    with:
      node-version: 18.x
      npm-install-command: npm ci
      command: make lint

  compile:
    name: 'Compile'
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@main'
    with:
      node-version: 18.x
      npm-install-command: make BOOTSTRAP_SCOPE=libs install
      command: make COMPILE_SCOPE=libs compile
      upload-artifact-name: 'compiled-libs'
      upload-artifact-path: 'package.json "integration/*/lib/*" "packages/*/lib/*" "packages/*/esm/*"'

  #
  # Test
  #

  test-linux-node-lts-active:
    name: 'Test: Linux, LTS'
    needs:
      - detect-source-code-changes
      - lint
      - compile
    if: needs.detect-source-code-changes.outputs.has_changes == 'true'
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@main'
    with:
      node-version: 18.x
      npm-install-command: make BOOTSTRAP_SCOPE=@serenity-js install
      download-artifact-name: 'compiled-libs'
      command: make test
      upload-artifact-name: 'test-reports'
      upload-artifact-path: 'package.json "packages/*/target/**/*"'

  test-linux-node-lts-previous:
    name: 'Test: Linux, LTS-1'
    needs:
      - detect-source-code-changes
      - lint
      - compile
    if: needs.detect-source-code-changes.outputs.has_changes == 'true'
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@main'
    with:
      node-version: 16.x
      npm-install-command: make BOOTSTRAP_SCOPE=@serenity-js install
      download-artifact-name: 'compiled-libs'
      command: make test-no-coverage

  test-linux-node-lts-next:
    name: 'Test: Linux, LTS+1'
    needs:
      - detect-source-code-changes
      - lint
      - compile
    if: needs.detect-source-code-changes.outputs.has_changes == 'true'
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@main'
    with:
      node-version: 20.x
      npm-install-command: make BOOTSTRAP_SCOPE=@serenity-js install
      download-artifact-name: 'compiled-libs'
      command: make test-no-coverage

  test-windows-node-lts-active:
    name: 'Test: Windows, LTS'
    needs:
      - detect-source-code-changes
      - lint
      - compile
    if: needs.detect-source-code-changes.outputs.has_changes == 'true'
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@main'
    with:
      runs-on: 'windows-latest'
      node-version: 18.x
      npm-install-command: make BOOTSTRAP_SCOPE=@serenity-js install
      download-artifact-name: 'compiled-libs'
      command: make test-no-coverage

  #
  # Integration
  #

  test-integration-playwright:
    name: 'Integration: Playwright'
    needs:
      - detect-source-code-changes
      - lint
      - compile
    if: needs.detect-source-code-changes.outputs.has_changes == 'true'
    uses: 'serenity-js/serenity-js/.github/workflows/main-integration-test-step.yaml@main'
    with:
      modules: |
        [
          "playwright-test",
          "playwright-web"
        ]
      runs-on: 'ubuntu-latest'
      node-version: 18.x
      npm-install-command: make BOOTSTRAP_SCOPE=@integration install
      download-artifact-name: 'compiled-libs'
      command: |
        mkdir target && \
        npx --no playwright install --with-deps && \
        make INTEGRATION_SCOPE=$INTEGRATION_MODULE integration-test
      upload-artifact-name: 'test-integration-coverage-reports-playwright'
      upload-artifact-path: 'package.json "integration/*/target/**/*"'

  test-integration-protractor:
    name: 'Integration: Protractor'
    needs:
      - detect-source-code-changes
      - lint
      - compile
    if: needs.detect-source-code-changes.outputs.has_changes == 'true'
    uses: 'serenity-js/serenity-js/.github/workflows/main-integration-test-step.yaml@main'
    with:
      modules: |
        [
          "protractor-test-runners",
          "protractor-web"
        ]
      runs-on: 'ubuntu-latest'
      node-version: 16.x
      npm-install-command: make BOOTSTRAP_SCOPE=@integration install
      download-artifact-name: 'compiled-libs'
      command: 'make INTEGRATION_SCOPE=$INTEGRATION_MODULE integration-test'
      upload-artifact-name: 'test-integration-coverage-reports-protractor'
      upload-artifact-path: 'package.json "integration/*/target/**/*"'

  test-integration:
    name: 'Integration'
    needs:
      - detect-source-code-changes
      - lint
      - compile
    if: needs.detect-source-code-changes.outputs.has_changes == 'true'
    uses: 'serenity-js/serenity-js/.github/workflows/main-integration-test-step.yaml@main'
    with:
      modules: |
        [
          "cucumber-1",
          "cucumber-2",
          "cucumber-3",
          "cucumber-4",
          "cucumber-5",
          "cucumber-6",
          "cucumber-7",
          "cucumber-8",
          "cucumber-9",
          "jasmine",
          "mocha",
          "webdriverio-test-runners",
          "webdriverio-web-devtools",
          "webdriverio-web-webdriver",
        ]
      runs-on: 'ubuntu-latest'
      node-version: 18.x
      npm-install-command: make BOOTSTRAP_SCOPE=@integration install
      download-artifact-name: 'compiled-libs'
      command: 'make INTEGRATION_SCOPE=$INTEGRATION_MODULE integration-test'
      upload-artifact-name: 'test-integration-coverage-reports'
      upload-artifact-path: 'package.json "integration/*/target/**/*"'

  #
  # Reporting
  #

  coverage:
    name: 'Coverage'
    needs:
      - test-linux-node-lts-active
      - test-integration
      - test-integration-playwright
      - test-integration-protractor
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
        with:
          fetch-depth: 2

      - name: Setup Node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: 18.x

      - name: Install Node Modules
        uses: bahmutov/npm-install@v1
        with:
          install-command: npm ci

      - name: Download all artifacts
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3

      - name: Decompress all artifacts to current directory
        run: ls **/*.zip | xargs -n1 7z x -aoa

      - name: Report coverage
        run: make report

      - name: Coveralls
        uses: coverallsapp/github-action@c7885c00cb7ec0b8f9f5ff3f53cddb980f7a4412 # v2.2.0
        with:
          github-token: ${{ github.token }}
          path-to-lcov: 'target/coverage/lcov.info'

      # https://github.com/actions/runner/issues/520
      - name: Get CodeClimate reporter ID
        id: secrets
        run: echo "CC_TEST_REPORTER_ID=${{ secrets.CC_TEST_REPORTER_ID }}" >> $GITHUB_OUTPUT

      - name: CodeClimate
        if: steps.secrets.outputs.CC_TEST_REPORTER_ID
        uses: paambaati/codeclimate-action@9dea053ab1947f448753ac842b9980de2e44fe88 # v4.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ steps.secrets.outputs.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: |
            ${{github.workspace}}/target/coverage/lcov.info:lcov
          debug: false

  #
  # NPM artifact publishing
  #

  artifacts-publish:
    name: 'NPM: publish artifacts'
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs:
      - test-linux-node-lts-active
      - test-linux-node-lts-previous
      - test-windows-node-lts-active
      - test-integration
      - test-integration-playwright
      - test-integration-protractor
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-lerna
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_user_email: ${{ secrets.RELEASE_GH_EMAIL }}
          git_username: ${{ secrets.RELEASE_GH_USERNAME }}
          npm_token: ${{ secrets.NPM_TOKEN }}

      - name: Download compiled libs
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
        with:
          name: compiled-libs
      - name: Decompress Libs
        run: 7z x -aoa compiled-libs.zip

      - name: Setup Node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: 18.x

      - name: Install Node Modules (root)
        uses: bahmutov/npm-install@v1
        with:
          install-command: npm ci

      - name: Publish artifacts
        run: npm run lerna:publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Print versions
        run: npm run version:print >> $GITHUB_STEP_SUMMARY

      - name: Upload changelog
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3
        with:
          retention-days: 3
          name: changelog
          path: |
            CHANGELOG.md

  #
  # Website
  #
  website:
    name: 'Website'
    needs:
      - detect-website-changes
      - detect-source-code-changes
      - lint
      - compile
      - artifacts-publish
    if: |
      always() &&
      (
        (
          needs.detect-website-changes.result == 'success' &&
          needs.detect-website-changes.outputs.has_changes == 'true'
        ) ||
        (
          needs.detect-source-code-changes.result == 'success' &&
          needs.detect-source-code-changes.outputs.has_changes == 'true' &&
          needs.artifacts-publish.result == 'success'
        )
      )
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
        with:
          fetch-depth: 2

      - name: Setup Node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: 18.x

      - name: Install Node Modules
        uses: bahmutov/npm-install@v1
        with:
          install-command: make BOOTSTRAP_SCOPE=site install

      - name: Download compiled libs
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
        with:
          name: 'compiled-libs'

      - name: Decompress compiled libs
        run:  7z x -aoa compiled-libs.zip

      # We generate an updated changelog only when there are artifacts to be published
      - name: Download changelog
        if: github.ref == 'refs/heads/main'
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
        continue-on-error: true
        with:
          name: changelog

      - name: Build website
        run: make site

      - name: List all (debug)
        run: tree

      - name: Publish website
        uses: JamesIves/github-pages-deploy-action@22a6ee251d6f13c6ab1ecb200d974f1a6feb1b8d # v4.4.2
        if: github.ref == 'refs/heads/main'
        with:
          BRANCH: gh-pages
          FOLDER: documentation/serenity-js.org/build
          CLEAN: true
