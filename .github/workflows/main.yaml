name: Release Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize ]

permissions:
  contents: read

jobs:

  detect-website-changes:
    name: 'Detect website changes'
    uses: 'serenity-js/serenity-js/.github/workflows/main-detect-changes.yaml@fix/ci'
    with:
      files: |
        documentation/**

  detect-source-code-changes:
    name: 'Detect source code and configuration changes'
    uses: 'serenity-js/serenity-js/.github/workflows/main-detect-changes.yaml@fix/ci'
    with:
      files: |
        .github/**
        bin/**
        packages/**
        integration/**
        *
      files-ignore: |
        *.md

  lint:
    name: 'Lint'
    needs:
      - detect-website-changes
      - detect-source-code-changes
    if: needs.detect-website-changes.outputs.only_modified == 'true' || needs.detect-source-code-changes.outputs.only_modified == 'true'
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@fix/ci'
    with:
      node-version: 16.x
      npm-install-command: npm ci
      command: make lint

  compile:
    name: 'Compile'
    needs:
      - detect-source-code-changes
    if: needs.detect-source-code-changes.outputs.only_modified == 'true'
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@fix/ci'
    with:
      node-version: 16.x
      npm-install-command: make BOOTSTRAP_SCOPE=libs install
      command: make COMPILE_SCOPE=libs compile
      upload-artifact-name: 'compiled-libs'
      upload-artifact-path: 'package.json "integration/*/lib/*" "packages/*/lib/*"'

  #
  # Test
  #

  test-linux-node-lts:
    name: 'Test: Linux, LTS'
    needs:
      - lint
      - compile
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@fix/ci'
    with:
      node-version: 16.x
      npm-install-command: make BOOTSTRAP_SCOPE=@serenity-js install
      download-artifact-name: 'compiled-libs'
      command: make test
      upload-artifact-name: 'test-reports'
      upload-artifact-path: 'package.json "target/**/*"'

  test-linux-node-lts-previous:
    name: 'Test: Linux, LTS-1'
    needs:
      - lint
      - compile
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@fix/ci'
    with:
      node-version: 14.x
      npm-install-command: make BOOTSTRAP_SCOPE=@serenity-js install
      download-artifact-name: 'compiled-libs'
      command: make test

  test-linux-node-lts-next:
    name: 'Test: Linux, LTS+1'
    needs:
      - lint
      - compile
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@fix/ci'
    with:
      node-version: 18.x
      npm-install-command: make BOOTSTRAP_SCOPE=@serenity-js install
      download-artifact-name: 'compiled-libs'
      command: make test

  test-windows-node-lts-next:
    name: 'Test: Windows, LTS'
    needs:
      - lint
      - compile
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@fix/ci'
    with:
      runs-on: 'windows-latest'
      node-version: 16.x
      npm-install-command: make BOOTSTRAP_SCOPE=@serenity-js install
      download-artifact-name: 'compiled-libs'
      command: make test

# todo: add macOS too?
#  test-macos-node-lts-next:
#    name: 'Test: macOS, LTS'
#    needs:
#      - lint
#      - compile
#    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@fix/ci'
#    with:
#      runs-on: 'macos-latest'
#      node-version: 16.x
#      npm-install-command: make BOOTSTRAP_SCOPE=@serenity-js install
#      download-artifact-name: 'compiled-libs'
#      command: make test

  #
  # Integration
  #

  test-integration-saucelabs:
    name: 'Integration: SauceLabs'
    # don't run on forks which won't have access to secrets
    if: ${{ !github.event.pull_request.head.repo.fork }}
    concurrency:
      group: saucelabs
      cancel-in-progress: true
    needs:
      - lint
      - compile
    uses: 'serenity-js/serenity-js/.github/workflows/main-integration-test-step.yaml@fix/ci'
    with:
      modules: '["webdriverio-web"]'
      runs-on: 'ubuntu-latest'
      node-version: 16.x
      npm-install-command: make BOOTSTRAP_SCOPE=@integration install
      download-artifact-name: 'compiled-libs'
      command: 'make INTEGRATION_SCOPE=$INTEGRATION_MODULE integration-test'
      upload-artifact-name: 'test-integration-coverage-reports-saucelabs'
      upload-artifact-path: 'package.json "target/**/*"'
    secrets:
      sauce-username: ${{ secrets.SAUCE_USERNAME }}
      sauce-access-key: ${{ secrets.SAUCE_ACCESS_KEY }}

  test-integration:
    name: 'Integration'
    needs:
      - lint
      - compile
    uses: 'serenity-js/serenity-js/.github/workflows/main-integration-test-step.yaml@fix/ci'
    with:
      modules: |
        [
          "cucumber-1",
          "cucumber-2",
          "cucumber-3",
          "cucumber-4",
          "cucumber-5",
          "cucumber-6",
          "cucumber-7",
          "cucumber-8",
          "jasmine",
          "mocha",
          "playwright",
          "protractor",
          "webdriverio"
        ]
      runs-on: 'ubuntu-latest'
      node-version: 16.x
      npm-install-command: make BOOTSTRAP_SCOPE=@integration install
      download-artifact-name: 'compiled-libs'
      command: 'make INTEGRATION_SCOPE=$INTEGRATION_MODULE integration-test'
      upload-artifact-name: 'test-integration-coverage-reports'
      upload-artifact-path: 'package.json "target/**/*"'

  #
  # Reporting
  #

  coverate-aggregate:
    name: 'Coverage: aggregate'
    needs:
      - test-linux-node-lts
      - test-integration-saucelabs
      - test-integration
    uses: 'serenity-js/serenity-js/.github/workflows/main-collect-artifacts.yaml@fix/ci'
    with:
      upload-artifact-name: 'aggregated-code-coverage'
      upload-artifact-path: 'package.json "./target/coverage"'

  coverage-report:
    name: 'Coverage: report'
    needs:
      - coverate-aggregate
    uses: 'serenity-js/serenity-js/.github/workflows/main-node-step.yaml@fix/ci'
    with:
      node-version: 16.x
      npm-install-command: npm ci
      download-artifact-name: 'aggregated-code-coverage'
      command: make report
      upload-artifact-name: 'aggregated-code-coverage-report'
      upload-artifact-path: 'package.json "./target/coverage"'

  coverage-publish:
    name: 'Coverage: publish'
    runs-on: ubuntu-latest
    continue-on-error: true
#    if: github.ref == 'refs/heads/main'
    needs:
      - coverage-aggregate
    steps:
      - name: Download code coverage reports
        uses: actions/download-artifact@v2
        with:
          name: 'aggregated-code-coverage-report'

      - name: Decompress code coverage reports
        run: '7z x -aoa aggregated-code-coverage-report.zip'

      - name: List all
        run: tree

      - name: Coveralls
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: 'target/coverage/lcov.info'
